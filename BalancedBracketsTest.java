import java.util.*;

public class BalancedBracketsTest {
    public static void main(String ... agrs) {
        String str[] = new String[]{
//                "[()][{}()][](){}([{}(())([[{}]])][])[]([][])(){}{{}{[](){}}}()[]({})[{}{{}([{}][])}]",
//                "[()][{}[{}[{}]]][]{}[]{}[]{{}({}(){({{}{}[([[]][[]])()]})({}{{}})})}",
//                "(])[{{{][)[)])(]){(}))[{(})][[{)(}){[(]})[[{}(])}({)(}[[()}{}}]{}{}}()}{({}](]{{[}}(([{]",
//                "){[]()})}}]{}[}}})}{]{](]](()][{))])(}]}))(}[}{{)}{[[}[]",
//                "}(]}){",
//                "((]()(]([({]}({[)){}}[}({[{])(]{()[]}}{)}}]]{({)[}{(",
//                "{}{({{}})}[][{{}}]{}{}(){{}[]}{}([[][{}]]())",
//                "(){}[()[][]]{}(())()[[([])][()]{}{}(({}[]()))()[()[{()}]][]]",
//                "()([]({}[]){}){}{()}[]{}[]()(()([[]]()))()()()[]()(){{}}()({[{}][]}[[{{}({({({})})})}]])",
//                "[]([{][][)(])}()([}[}(})}])}))]](}{}})[]({{}}))[])(}}[[{]{}]()[(][])}({]{}[[))[[}[}{(]})()){{(]]){][",
//                "{()({}[[{}]]()(){[{{}{[[{}]{}((({[]}{}()[])))]((()()))}(()[[[]]])((()[[](({([])()}))[]]))}]})}",
//                "()(){{}}[()()]{}{}",
//                "{}()([[]])({}){({[][[][[()]]{{}[[]()]}]})}[](())((())[{{}}])",
//                "{}(((){}){[]{{()()}}()})[]{{()}{(){()(){}}}}{()}({()(()({}{}()((()((([])){[][{()}{}]})))))})",
//                "][[{)())))}[)}}}}[{){}()]([][]){{{{{[)}]]{([{)()][({}[){]({{",
                "{{}(",
//                "{[{((({}{({({()})()})[]({()[[][][]]}){}}))){}}]}{}{({((){{}[][]{}[][]{}}[{}])(())}[][])}",
//                "()[[][()[]][]()](([[[(){()[[]](([]))}]]]))",
//                "()[]({}{})(()){{{}}()()}({[]()}())[](){}(({()}[{}[{({{}}){({}){({})((({()})))}}}]]))",
//                "}[{){({}({)})]([}{[}}{[(([])[(}){[]])([]]}(]]]]{][",
//                "[{]{[{(){[}{}(([(]}])(){[[}(]){(})))}}{{)}}{}][({(}))]}({)",
//                ")})[(]{][[())]{[]{{}}[)[)}[]){}](}({](}}}[}{({()]]",
//                "[[[({[]}({[][[[[][[{(()[][])}()[][]][]{}]]]]}))][(()){}]]]()[{}([]{}){}{{}}]",
//                "({[]({[]})}())[][{}[{{(({{{([{}])}}}))}}]]",
//                "([((()))()])[][][]{}()(([]))[]()[]((){}[]){}(){{}[]}[[{[]}]]",
//                "[[(((({}{[]{}()}){}{{}}){({[]{[{}]{(){}(((){()}))}()}}[[]]()()[()])[[{}{}]()]}))]]{}[]{}({({{}})})",
//                "(]{()}((",
//                "[][(())[({{{()[]}}{[[][[][[[]{{{[()]{{{{}{[]}[][]}}}}}}]]]]}})]]",
//                "}[})})}[)]{}{)",
//                "({(}{})))}(}[)[}{)}}[)[{][{(}{{}]({}{[(})[{[({{[}{(]]})}",
//                "]}})[]))]{][])[}(])]({[]}[]([)",
//                "[{{}{[{{[}[[}([]",
//                "[([]){}][({})({[(([])[][])][[{}{([{{}{(()){{{({}{{}}())}}[]}}()[()[{{{([](()){[[[]]]})}}}]]}])}]]})]",
//                "]{}{(}))}](})[{]]()(]([}]([}][}{]{[])}{{{]([][()){{})[{({{{[}{}](]}}",
//                "{[{}}){(}[][)(}[}][)({[[{]}[(()[}}){}{)([)]}(()))]{)(}}}][",
//                "(]{}{(}}}[)[",
//                "[]{}{[[]]}([{}]{}[]){{(())}}",
//                "[)([{(][(){)[)}{)]]}}([((][[}}(]{}]]}]][(({{{))[[){}{]][))[]{]][)[{{}{()]){)])))){{{[(]}[}}{}]",
//                "{({(){[[[][]{}[[([]{})]{}]][[]()()]]}})}[{}{{}}]",
//                ")}][(})){))[{}[}",
//                "{[]{({]}[}}[{([([)([){{}{(}}[]}}[[{[}[[()(])[}[]",
//                "()()()[]",
//                "((){}])][]][}{]{)]]}][{]}[)(])[}[({(",
//                ")[((])(]]]]((]){{{{())]}]}(}{([}(({}]])[[{){[}]{{}})[){(",
//                "}][[{[((}{[]){}}[[[)({[)}]]}(]]{[)[]}{}(){}}][{()]))})]][(((}}",
//                "([]){}{{}{}}()([([{}{[[]()([(([]()))()[[]]])]}])])",
//                "[()[[]{{[]}()([])}[]][][]][]()[]{}{}[][]{}{}[()(){}]",
//                "{[{){]({(((({](]{([])([{{([])[}(){(]](]{[{[]}}())[){})}))[{})))[",
//                "{}[()[]][]{}{}[[{{[[({})]()[[()]]]}}]]",
//                "{[{}[][]]}[((()))][]({})[]{}{()}",
//                "(){[{({})}]}",
//                "([]])][{)]({)[]))}]())[}]))][}{(}}})){]}]{[)}(][})[[",
//                "((({{}(([{}(())]))[()]{[[[]()]]}})))",
//                "}()))}(}]]{{})}][{](]][{]{[[]]]}]]}([)({([))[[(]}])}[}(([{)[)]]([[](]}]}{]{{})[]){]}{])(",
//                "{}{}{}{[[()]][]}",
//                ")]}]({{})[[[{]{{{}}][))]{{",
//                "))){({}])}])}}]{)()(}(]}([",
//                "([[]][])[[]()][]()(([[]]{[()[]{[][{}]}[()]]{}{[]}}{{}()}(()[([][]{})[[{}][]]{}[]])))",
//                "(]{[({}[){)))}]{[{}][({[({[]))}[}]}{()(([]{]()}})}[]{[)](((]]])([]}}]){)(([]]}[[}[",
//                "([[]])({}(([(){{}[{}]}]){[{}]}))[][{}{}](){}",
//                "[][][][][][([])][]{({()}[[()()]{([(){[]{}}{(())}{[](){}()({}())}[({}[[]()])][]])}])}",
//                "}[{{(}})}}(((())()({]{([]((][(({)[({[]]}[])}]{][{{}]{)][}(])}}}))}}}",
//                "[]({})()[]{}{}[]({}{})[]{([])()[()][{()({})[{}{[[()]{}[]][]}(({{[]{()()()}{}[]()}[]}){{}{}})]}]}",
//                "{{(([{)]{}({][{](){({([[[][)}[)})(",
//                "[{}]{[()({[{}]})]}",
//                "[[{}]]",
//                "]{{({[{]}[[)]]}{}))}{){({]]}{]([)({{[]){)]{}){){}()})(]]{{])(])[]}][[()()}",
//                "{[([}[[{{(]]][}()())]{){(){)]]){})}]{][][(}[]())[}[)})})[][{[)[})()][]))}[[}",
//                "]()])}[}}}{]]{)[}(}]]])])}{(}{([{]({)]}])(})[{}[)]])]}[]{{)){}{()}]}((}}{({])[}])[]}",
//                "(]}[{}{{][}))){{{([)([[])([]{[",
//                "{(()[]){}}(){[]}({{}(()())})([]){}{}(())()[()]{}()",
//                "{{}[{}[{}[]]]}{}({{[]}})[[(){}][]]{}(([]{[][]()()}{{{()()}{[]}({}[]{()})}{()}[[]][()]}))",
//                "{[][]}[{}[](){}]{{}{[][{}]}}",
//                "()(){}(){((){}[])([[]]())}",
//                "{}[[{[((}[(}[[]{{]([(}]][[",
//                "{}[([{[{{}()}]{}}([[{}[]]({}{{()}[][][]})])])]",
//                "{[](}([)(])[]]})()]){[({]}{{{)({}(][{{[}}(]{",
//                "[][]{{}[](())}{}({[()]}())[][[][({}([{}]))]]",
//                "((()))[]{[(()({[()({[]}{})]}))]}{[]}{{({}{})[{}{}]{()([()])[{()}()[[]{}()]{}{}[]()]}[[]{[]}([])]}}"
        };


        BalancedBracketsTest test = new BalancedBracketsTest();
        for(int i=0;i<str.length;i++){
            System.out.println(test.isBalanced(str[i]));
        }

    }

    private String isBalanced(String str) {
        char[] cArr = str.toCharArray();
        Map<Character, Character> map = new HashMap<>();
        map.put('{','}');
        map.put('[',']');
        map.put('(',')');

        List<Character> leftList = new ArrayList<>();
        leftList.add('{');
        leftList.add('[');
        leftList.add('(');
        Stack<Character> stack = new Stack<>();
        String isBalanced = "YES";
        for(int i=0;i<cArr.length;i++) {
            if(leftList.contains(cArr[i])) {
                stack.add(cArr[i]);
            } else {
                if(stack.size()==0) {
                    isBalanced="NO";
                    break;
                }
                char poppedElement = stack.pop();
                if(cArr[i] != map.get(poppedElement)) {
                    isBalanced = "NO";
                    break;
                }
            }
        }
        return isBalanced;
    }


}
